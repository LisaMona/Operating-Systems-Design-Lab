#include<bits/stdc++.h>
using namespace std;

int n,k=4,r,choice,new_bit1,ind;
int imp[20],a[20],b[20],q[20];
int transmitted[20],mid[20],received[20],rem[20];
int i,j,x,y,z,num;
int d[4] = {1,1,0,1};

int rem_fun(int imp_loc[],int m)
{	
	int f;
	for(int i=0;i<n;i++)
	{
		for(int j=i,l=0;j<k+i;j++,l++)
		{
			imp_loc[j] = imp_loc[j] ^ d[l];			
		}	
		if(imp_loc[i+1] == 0)
		{			
			i++;	
		}
	}
	
	for(y=0;y<n;y++)
		mid[y] = a[y];
	if(m==1)
	{
		cout<<"\nThe remainder bits now are...";
		for(y=n,z=0;y<n+k-1;y++,z++)
		{
			rem[z] = imp_loc[y];
			cout<<imp_loc[y]<<"  ";
			mid[y] = imp_loc[y];
			if(imp_loc[y] == 1)
				f =1;
		}
	}
	return f;
}
int main()
{
	int check = 0;
	cout<<"\nThe length of data word is to be entered here... ";
	cin>>n;	
	r = k-1;
	cout<<"\nThe data bits are to be entered here...";
	for( i=0 ; i<n ; i++)
	{
		cin>>a[i];
		imp[i] = a[i];
	}
	cout<<"\nThe divisor bits are...";
	for( j=0 ; j<n ; j++)
		cout<<d[j]<<" ";
	
	cout<<endl;
	check = rem_fun(imp,1);
	cout<<"\nThe Codeword transmitted is...";
	for(y=0;y<n+k-1;y++)
	{
		transmitted[y] = mid[y];
		cout<<transmitted[y]<<"  ";	
		received[y] = transmitted[y];
	}		
	cout<<"\nThe Codeword received is...";
	for(y=0;y<n+k-1;y++)
		cout<<received[y]<<"  ";
		
	check = rem_fun(received,0);
	
	if(check == 0)
		cout<<"\nKEYWORD IS VALID";
	else
		cout<<"\nKEYWORD IS INVALID";	
		
	for( j=0 ; j<n+k-1 ; j++)
		received[j] = transmitted[j];
	cout<<"\nEnter the number of bits you want to change...";
	cin>>num;
	if(num == 0)
		 exit(0);
		 
	cout<<"\nEnter the position of the bits you want to change... ";
	for( j = 0;j<num;j++)		
	{
		cin>>ind;
		if(received[ind] == 1)
			received[ind] = 0 ;
		else
			received[ind] = 1;	
	}	
	cout<<"\nThe Codeword transmitted is...\t    ";
	for( j=0 ; j<n+k-1 ; j++)
			cout<<transmitted[j]<<"  ";					
	
	cout<<"\nThe Modifed codeword received is... ";			
	for( j=0 ; j<n+k-1 ; j++)
			cout<<received[j]<<"  ";
	
	check = rem_fun(received,1);
	
	if(check == 0)
		cout<<"\nKEYWORD IS VALID\n";
	else
		cout<<"\nKEYWORD IS INVAID\n";			
}
