#include<bits/stdc++.h>
#define n 5

using namespace std;

int main()
{
	int i,j,k,min,prev=INT_MAX;
	int exec=0,prev_exec=0,tw=0,total=0;
	int arrival[5] = {0,2,4,6,8};		//arrival times
	int burst[5] = {16,8,12,2,4};		//burst times
	int part[5] = {16,8,12,2,4};
	int wait[5];
	
	for(i=0;i<n;i++)
		total+=burst[i];		//total burst time calculation
	
	cout<<"\nGantt Chart:\n  0";
	
	while(exec<total)
	{
		for(j=0;j<n;j++)
		{
			min=INT_MAX;
			k=-1;
			for(i=0;i<n;i++)
				if(arrival[i]<=exec && burst[i]<min)		//minimum remaining burst time check
				{
					k=i;
					min=burst[i];
				}
		}
		exec++;
		if(prev!=k && prev!=INT_MAX)			//premption check
			cout<<"\tP"<<prev<<"\t"<<prev_exec;
		burst[k]--;
		if(burst[k]==0)
		{
			burst[k]=INT_MAX;
			wait[k]=exec-arrival[k]-part[k];		//waiting time calculation at end(after premptions)
		}
		prev=k;
		prev_exec=exec;
	}
	
	cout<<"\tP"<<prev<<"\t"<<prev_exec;
	cout<<endl;

	for(i=0;i<n;i++)
	{
		tw=tw+wait[i];			//total waiting time
		cout<<"\n Waiting time of Process "<<i+1<<" is "<<wait[i]<<endl;
	}
	
	float avg=(float)tw/n;			//average waiting time
	cout<<"\n Average waiting time is "<<avg<<"\n\n";

	return 0;
}
